{
  "name": "grunt-scss-imports",
  "version": "0.0.2",
  "description": "A grunt task to create sass/scss @import statements from a collection of stylesheet files",
  "main": "Gruntfile.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ITspirit/grunt-sass-imports.git"
  },
  "author": {
    "name": "Michael Frank",
    "email": "contact@phpdoctor.cc",
    "url": "https://github.com/ITspirit/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ITspirit/grunt-sass-imports/issues"
  },
  "homepage": "https://github.com/ITspirit/grunt-sass-imports",
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-sass": "~0.9.0",
    "grunt": "~0.4"
  },
  "peerDependencies": {
    "grunt": "~0.4"
  },
  "keywords": [
    "gruntplugin",
    "sass",
    "sassCSS",
    "scss",
    "scssCSS",
    "compass",
    "import",
    "@import"
  ],
  "publishConfig": {
    "registry": "http://registry.npmjs.org/"
  },
  "readme": "[![npm version](http://b.adge.me/npm/v/grunt-sass-imports.svg) &nbsp; [![gittip donate](http://b.adge.me/:gittip-donate-lightgrey.svg)](https://www.gittip.com/ITspirit/) \n\n---\n\n# grunt-sass-imports\n\n> A grunt task to create sass/scss @import statements from a collection of stylesheet files.\n\nWhy use this? To get useful error messages from the sass/scss parser, that tell you in what file the error was encountered!\nsass/scss uses @import statements to aggregate files and will tell you about parsing errors in those files.\nBut maintaining these statements by hand is a pain. In order to automatically aggregate all the style files in a project,\na method of first concatenating the files before parsing is widely used. This works but you loose the valuable\ninformation about where to fix your mistakes.\n\nSo, automate @import creation with this plugin and use the resulting file as the source for the sass/scss parser.\n\nBy default any .css source files are inlined in the output before the @import statements for the sass/scss files start.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the\n[Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a\n[Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with\nthat process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-sass-imports --save-dev\n```\n\n`--save-dev` adds the plugin to your devDependencies.\n\nOnce the plugin has been installed, load it in your `Gruntfile.js` like so:\n\n```js\ngrunt.loadNpmTasks('grunt-sass-imports');\n```\n\n## The \"sass_imports\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `sass_imports` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  sass_imports: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    }\n  }\n})\n```\n\n### Options\n\nIn addition grunt-glue-nu has a few configuration options that are not passed on to glue.\n\n- **options.inlineCSS** `{Boolean} true` – By default any .css source files are inlined in the output before the @import statements for the sass/scss files start.\n                                                  sass/scss itself will generate CSS from `.sass` @import statements, but any `.css` @imports are left as is. If that's the behavior\n                                                  you want, set `inlineCSS` to false. The @imports will be created in order of the provided files.\n\n- **options.banner** `{String} \"// This file was generated by grunt-sass-imports\"` – This option contains the banner that is added to the beginning of the generated output file.\n\n\n\n```js\ngrunt.initConfig({\n  sass_imports: {\n    options: {\n      inlineCSS: false // default: true\n    },\n    src: [ 'styles/*.css', 'styles/*.sass'],\n    dest: 'dist/imports.sass'\n  }\n})\n```\n\n---\n\n### Usage Examples\n\n#### Using src and dest\nIn this example, `src` and `dest` properties are used to specify input files and the output file.\n\n```js\ngrunt.initConfig({\n  sass_imports: {\n    options: {\n      inlineCSS: true\n    },\n    src: [ 'styles/*.css', 'styles/*.sass'],\n    dest: 'dist/imports.sass'\n  }\n})\n```\n\n#### Using 'files' shorthand notation\nIn this example, a `files` shorthand is used to specify input files and the output file.\n\n```js\ngrunt.initConfig({\n  sass_imports: {\n    options: {\n    },\n    files: {\n      'dist/imports.sass': ['styles/styles.css', 'styles/styles.sass']\n    }\n  }\n})\n```\n\n## Troubleshooting\n\n\tWarning: Arguments to path.join must be strings\n\nMost likely caused by a change in Node 0.10.0. Fixed in Grunt 0.4.1.\nUpdate grunt and grunt-cli.\n\n\n## Release History\nsee [CHANGELOG.md](CHANGELOG.md)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-scss-imports@0.0.2",
  "dist": {
    "shasum": "d36ef2e40d6a8df280825ed22c75389e1f0bf6c2"
  },
  "_from": "grunt-scss-imports@*",
  "_resolved": "https://registry.npmjs.org/grunt-scss-imports/-/grunt-scss-imports-0.0.2.tgz"
}
